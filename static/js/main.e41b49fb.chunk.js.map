{"version":3,"sources":["components/core/Sidebar.js","screens/Home/components/HomeWell.js","screens/Home/components/CourseStat.js","screens/Home/components/UserInfoWell.js","screens/Home/components/CurrentCourse.js","screens/Home/components/CourseInfo.js","data/categoryData.js","data/courseData.js","screens/Home/components/CourseInfoList.js","screens/Home/components/LineChart.js","screens/Home/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["NavList","styled","div","props","isDropdownVisbile","StyledTopNavBar","StyledSideBar","nav","Sidebar","useState","setDropdownVisibility","className","href","MenuOutlined","style","fontSize","color","onClick","HomeWellComponent","HomeWell","StatComponent","CourseStat","statNumber","statType","statStatus","UserInfoWellComponent","UserSearchRow","StyledSearch","Input","UserInfoWell","menu","e","message","info","console","log","Item","icon","UserOutlined","size","placeholder","bordered","prefix","SearchOutlined","count","BellOutlined","Button","overlay","placement","sizes","src","StyledAvatar","Avatar","CurrentCourseBar","ToggleCourseBar","CircularProgressContainer","CurrentCourse","shape","styles","buildStyles","pathColor","textColor","value","text","background","borderRadius","border","ArrowLeftOutlined","ArrowRightOutlined","CourseInfoBar","StyledCourseAuthor","span","StyledCourseTitle","TimeIconHolder","RatingIconHolder","CourseInfo","title","author","rating","time","width","ClockCircleFilled","FireFilled","courseCategories","statisticCategories","generateFakeCourses","courseCount","courses","courseTitles","FacebookOutlined","InstagramOutlined","TwitterOutlined","GithubOutlined","GitlabOutlined","AmazonOutlined","LinkedinOutlined","DribbbleOutlined","RedditSquareFilled","WeiboCircleOutlined","ChromeOutlined","AlibabaOutlined","IeOutlined","faker","helpers","shuffle","i","push","name","firstName","lastName","Math","floor","random","toFixed","TabLink","isActive","CourseInfoList","currentCategory","setCategory","courseCatalog","setCourseCatalog","useEffect","map","courseCategory","index","ChartContainer","LineChart","data","labels","datasets","label","fill","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","options","responsive","plugins","legend","display","tooltip","callbacks","context","dataset","dataIndex","labelColor","scales","x","grid","y","ticks","stepSize","elements","line","tension","Home","statCategoryIndex","setStatCategoryIndex","height","marginTop","flex","StyledHeader","maxWidth","statCategory","SubscriptionBanner","class","StyledButton","SubscriptionIconColumn","StyledBookOutlined","BookOutlined","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e41b49fb.chunk.js","sourcesContent":["import { MenuOutlined } from '@ant-design/icons'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Sidebar = () => {\n\n    const [isDropdownVisbile, setDropdownVisibility] = useState(false);\n\n    return (\n        <>\n            <StyledSideBar className=\"single-nav menu\">\n                <ul>\n                    <li><span className=\"nav-main-text baloo weight-700 size-70 font-white\">F.</span></li>\n                    <li>\n                        <a href=\"#\">\n                            <i className=\"clinikk-icon-default fas font-white fa-home\"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#\">\n                            <i className=\"clinikk-icon-default fas font-white fa-graduation-cap\"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#\">\n                            <i className=\"clinikk-icon-default fas font-white fa-user\"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#\">\n                            <i className=\"clinikk-icon-default fas font-white fa-envelope\"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#\">\n                            <i className=\"clinikk-icon-default fas font-white fa-cog\"></i>\n                        </a>\n                    </li>\n                    <li></li>\n                </ul>\n                <span>\n                    <a href=\"#\"><i className=\"clinikk-icon-default fas font-white fa-sign-out-alt\"></i></a>\n                </span>\n            </StyledSideBar>\n            <StyledTopNavBar>\n                <span className=\"nav-main-text baloo weight-700 size-60 font-white\">F.</span>\n                <MenuOutlined style={{ fontSize: 30, color: \"#ffffff\" }} onClick={() => setDropdownVisibility(!isDropdownVisbile)} />\n            </StyledTopNavBar>\n            <NavList isDropdownVisbile={isDropdownVisbile}>\n                    <ul>\n                        <li>\n                            <a href=\"#\">\n                                <i className=\"clinikk-icon-default fas font-white fa-home\"></i> \n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"#\">\n                                <i className=\"clinikk-icon-default fas font-white fa-graduation-cap\"></i>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"#\">\n                                <i className=\"clinikk-icon-default fas font-white fa-user\"></i>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"#\">\n                                <i className=\"clinikk-icon-default fas font-white fa-envelope\"></i>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"#\">\n                                <i className=\"clinikk-icon-default fas font-white fa-cog\"></i>\n                            </a>\n                        </li>\n                        <li></li>\n                    </ul>\n                </NavList>\n        </>\n    )\n}\n\nconst NavList = styled.div`\n    background-color: #000000;\n    margin-bottom: 20px;\n    padding: 0px 10px;\n    display: ${props => props.isDropdownVisbile ? \"flex\" : \"none\"};\n\n    ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n        \n        display: flex;\n        flex-direction: column;\n    \n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n    \n        li {\n            a {\n                text-decoration: none;\n                color: #353b48;\n                padding: .6em 0em;\n                display: block;\n                transition: all 0.5s ease;\n            }\n\n            a: hover {\n                background-color: #f5f6fa;\n            }\n        }\n    }\n`;\n\nconst StyledTopNavBar = styled.div`\n    height: 50px;\n    background-color: #000000;\n    padding: 0px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    @media only screen and (min-width: 400px) {\n        display: none;\n    }\n`\n\nconst StyledSideBar = styled.nav`\n    height: 80vh;\n    min-width: 100px;\n    padding: 20px 0 20px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #000000;\n    overflow-y: auto;\n    margin-left: 10px;\n    z-index: 1;\n    border-radius: 24px;\n    margin-right: 20px;\n    flex: 0.02;\n\n    @media only screen and (max-width: 400px) {\n        display: none;\n    }\n\n    ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n        \n        display: flex;\n        flex-flow: column;\n        max-width: 300px;\n        max-height: 500px;\n        height: 100%;\n    \n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n    \n        li {\n            a {\n                text-decoration: none;\n                color: #353b48;\n                padding: .6em 1em;\n                display: block;\n                transition: all 0.5s ease;\n            }\n\n            a: hover {\n                background-color: #f5f6fa;\n            }\n        }\n    }\n`\n\nexport default Sidebar\n","import styled from 'styled-components'\n\nconst HomeWell = () => {\n    return (\n        <HomeWellComponent>\n            <span className=\"baloo weight-600 size-60 font-black\">Hello Josh!</span>\n            <span className=\"roboto size-16 weight-400 font-black\">It's good to see you again</span>\n        </HomeWellComponent>\n    )\n}\n\nconst HomeWellComponent = styled.div`\n    flex: 0.5;\n    height: 160px;\n    align-items: flex-start;\n    justify-content: center;\n    padding: 10px 20px;\n    background-color: #f5f5f7;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n\n    @media only screen and (max-width: 400px) {\n        width: 300px !important;\n        display: flex;\n        margin-bottom: 30px;\n    }\n`\n\nexport default HomeWell\n","import styled from 'styled-components'\n\nconst CourseStat = ({statNumber, statType, statStatus}) => {\n    return (\n        <StatComponent>\n            <span className=\"baloo size-60 weight-600 font-black\">{statNumber}</span>\n            <div className=\"flex column\">\n                <span className=\"baloo size-16 weight-400 font-black\">{statType}</span>\n                <span className=\"baloo size-16 weight-400 font-black\">{statStatus}</span>\n            </div>\n        </StatComponent>\n    )\n}\n\nconst StatComponent = styled.div`\n    flex: 0.4;\n    display: flex;\n    flex-direction: row;\n    background-color: #f5f5f7;\n    justify-content: space-around;\n    align-items: center;\n    padding: 15px 15px;\n    border-radius: 15px;\n\n    @media only screen and (max-width: 400px) {\n        flex: 0.45\n    }\n`;\n\nexport default CourseStat\n","import { Badge, Input, Avatar, Space, Dropdown, message, Menu, Image } from 'antd'\nimport { SearchOutlined, BellOutlined, UserOutlined } from '@ant-design/icons'\nimport CourseStat from './CourseStat'\n\nimport styled from 'styled-components'\n\nconst UserInfoWell = () => {\n\n    function handleMenuClick(e) {\n        \n        message.info('Click on menu item.');\n        console.log('click', e);\n    }\n        \n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n            1st menu item\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            2nd menu item\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n            3rd menu item\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <UserInfoWellComponent>\n            <UserSearchRow className=\"row\">\n                    <StyledSearch size=\"large\" placeholder=\"\" bordered={false} prefix={<SearchOutlined />} />\n                    \n                    <Badge count={5}>\n                        <Avatar icon={<BellOutlined />} />\n                    </Badge>\n\n                    <Dropdown.Button \n                        overlay={menu}\n                        placement=\"bottomRight\"\n                        size={\"middle\"}\n                        icon={\n                            <Image sizes={\"small\"} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                        }>\n                    </Dropdown.Button>\n                    \n            </UserSearchRow>\n            <div className=\"row full-width user-courses-stat-container\">\n                <CourseStat statNumber={5} statType={\"Courses\"} statStatus={\"Completed\"} />\n                <CourseStat statNumber={11} statType={\"Courses\"} statStatus={\"In Progress\"} />\n            </div>\n        </UserInfoWellComponent>\n    )\n}\n\nconst UserInfoWellComponent = styled.div`\n    flex: 0.45;\n    max-width: 525px;\n    height: 160px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    @media only screen and (max-width: 400px) {\n        width: 300px !important;\n        display: block;\n    }\n`;\n\nconst UserSearchRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    align-content: space-between;\n    align-items: center;\n`;\n\nconst StyledSearch = styled(Input)`\n    background-color: #f5f5f7;\n    border-radius: 15px;\n    flex: 0.5\n`\n\nexport default UserInfoWell\n","import { Avatar, Button } from 'antd'\nimport { ArrowLeftOutlined, ArrowRightOutlined, UserOutlined } from '@ant-design/icons'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport styled from 'styled-components'\n\nconst CurrentCourse = () => {\n\n    const percentage = 84\n\n    return (\n        <div className=\"row full-width space-between flex-wrap hideable\">\n                    \n            <CurrentCourseBar>\n                <StyledAvatar shape=\"square\" size={50} icon={<UserOutlined />} />\n                <div className=\"flex column\">\n                    <span className=\"baloo size-16 weight-600\">Spanish B2</span>\n                    <span className=\"roboto size-13 weight-400\">by Alejandro Velazquez</span>\n                </div>\n                <CircularProgressContainer>\n                    <CircularProgressbar \n                        styles={buildStyles({\n                            // Colors\n                            pathColor: `#000000`,\n                            textColor: '#000000'\n                        })}\n                        value={percentage}\n                        text={`${percentage}%`}\n                    />\n                </CircularProgressContainer>\n\n                <Button \n                    style={{\n                        background: 'black',\n                        borderRadius: \"10px\",\n                        color: \"#ffffff\"\n                    }}\n                    className=\"roboto size-13 weight-700\"\n                >\n                    Continue\n                </Button>\n            </CurrentCourseBar>\n\n            <ToggleCourseBar>\n                <Button style={{border: \"1px solid black\"}} shape={\"circle\"} icon={<ArrowLeftOutlined />}></Button>\n                <Button style={{border: \"1px solid black\"}} shape={\"circle\"} icon={<ArrowRightOutlined />}></Button>\n            </ToggleCourseBar>\n\n        </div>\n    )\n}\n\nconst StyledAvatar = styled(Avatar)`\n    @media only screen and (max-width: 400px) {\n        height: 40px;\n        width: 40px;\n    }\n`;\n\nconst CurrentCourseBar = styled.div`\n    flex: 0.8;\n    background-color: #f5f5f7;\n    min-height: 75px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 15px;\n\n    @media only screen and (max-width: 400px) {\n        flex-wrap: wrap;\n        width: 300px;\n        margin-bottom: 20px;\n    }\n`;\n\nconst ToggleCourseBar = styled.div`\n    flex: 0.15;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    @media only screen and (max-width: 400px) {\n        width: 50%;\n        justify-content: space-around;\n    }\n`;\n\nconst CircularProgressContainer = styled.div`\n    height: 50px;\n    width: 50px;\n    color: black;\n\n    @media only screen and (max-width: 400px) {\n        display: none;\n    }\n`;\n\nexport default CurrentCourse\n","import { Avatar, Button } from 'antd'\nimport { ClockCircleFilled, FireFilled } from '@ant-design/icons'\n\nimport styled from 'styled-components'\n\nconst CourseInfo = ({title, author, rating, time, icon}) => {\n\n    return (\n        <CourseInfoBar>\n            <StyledAvatar shape=\"square\" size={50} icon={icon} />\n            <div className=\"flex column\" style={{width: \"100px\"}}>\n                <StyledCourseTitle className=\"baloo size-16 weight-600\">{title}</StyledCourseTitle>\n                <StyledCourseAuthor className=\"roboto size-13 weight-400\">by {author}</StyledCourseAuthor>\n            </div>\n            \n            <TimeIconHolder><ClockCircleFilled /><span> {time}</span></TimeIconHolder>\n            \n            <RatingIconHolder><FireFilled /> <span>{rating}</span></RatingIconHolder>\n\n            <Button \n                style={{\n                    border: '1px solid #000000',\n                    borderRadius: \"10px\",\n                    color: \"#000000\"\n                }}\n                className=\"roboto size-13 weight-700\"\n            >\n                Continue\n            </Button>\n        </CourseInfoBar>\n    )\n}\n\nconst StyledAvatar = styled(Avatar)`\n    @media only screen and (max-width: 400px) {\n        height: 30;\n        width: 30;\n    }\n`;\n\nconst CourseInfoBar = styled.div`\n    width: 100%;\n    background-color: #f5f5f7;\n    height: 75px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 15px;\n    margin-top: 20px;\n\n    @media only screen and (max-width: 400px) {\n        flex-wrap: wrap;\n        width: 300px;\n    }\n`;\n\nconst StyledCourseAuthor = styled.span`\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nconst StyledCourseTitle = styled.span`\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nconst TimeIconHolder = styled.div`\n    @media only screen and (max-width: 400px) {\n        display: none;\n    }\n`\n\nconst RatingIconHolder = styled.div`\n    @media only screen and (max-width: 400px) {\n        display: none;\n    }\n`\n\nexport default CourseInfo\n","export const courseCategories = [\n    {\n        \"title\": \"All Courses\",\n        \"url\": \"http://dummyurl.doesntwork\"\n    },\n    {\n        \"title\": \"The Newest\",\n        \"url\": \"http://dummyurl.doesntwork\",\n    },\n    {\n        \"title\": \"Top Rated\",\n        \"url\": \"http://dummyurl.doesntwork\",\n    },\n    {\n        \"title\": \"Most Popular\",\n        \"url\": \"http://dummyurl.doesntwork\",\n    }\n]\n\nexport const statisticCategories = [\n    {\n        \"title\": \"Learning Hours\"\n    },\n    {\n        \"title\": \"My Courses\"\n    }\n]","import faker from 'faker'\nimport { \n    FacebookOutlined,\n    InstagramOutlined,\n    TwitterOutlined,\n    GithubOutlined,\n    GitlabOutlined,\n    AmazonOutlined,\n    LinkedinOutlined,\n    DribbbleOutlined,\n    RedditSquareFilled,\n    WeiboCircleOutlined,\n    ChromeOutlined,\n    AlibabaOutlined,\n    IeOutlined\n} from '@ant-design/icons'\n\nexport const generateFakeCourses = (courseCount = 5) => {\n    const courses = [];\n    let courseTitles = [\n        { title: \"Learn Figma\", icon: <FacebookOutlined /> },\n        { title: \"Learn Photoshop\", icon: <InstagramOutlined /> },\n        { title: \"Learn Skating\", icon: <TwitterOutlined /> },\n        { title: \"Learn Photography\", icon: <GithubOutlined /> },\n        { title: \"Learn Painting\", icon: <GitlabOutlined /> },\n        { title: \"Learn Spanish\", icon: <AmazonOutlined /> },\n        { title: \"Learn Cooking\", icon: <LinkedinOutlined /> },\n        { title: \"Learn Coding\", icon: <DribbbleOutlined /> },\n        { title: \"Learn Javascript\", icon: <RedditSquareFilled /> },\n        { title: \"Learn Python\", icon: <WeiboCircleOutlined /> },\n        { title: \"Learn Travel Writing\", icon: <ChromeOutlined /> },\n        { title: \"Learn Gardening\", icon: <AlibabaOutlined /> },\n        { title: \"Learn Artifial Intelligence\", icon: <IeOutlined /> }\n    ]\n\n    courseTitles = faker.helpers.shuffle(courseTitles);\n\n    for (let i = 0; i < courseCount; i++) {\n\n        courses.push(\n            {\n                \"title\" : courseTitles[i].title,\n                \"author\" : faker.name.firstName() + ' ' + faker.name.lastName(),\n                \"time\" : `${Math.floor(Math.random() * 7)}h ${Math.floor(Math.random() * 9)}min`,\n                \"rating\" : (Math.random() * 10).toFixed(2),\n                \"icon\": courseTitles[i].icon,\n                \"courseUrl\" : \"http://dummylink.doesntwork\"\n            }\n        )\n        \n    }\n\n    return courses;\n}\n\nexport const getBrandIcon = () => {\n    const BrandIcons = [\n        <FacebookOutlined />,\n        <InstagramOutlined />,\n        <TwitterOutlined />,\n        <GithubOutlined />,\n        <GitlabOutlined />,\n        <AmazonOutlined />,\n        <LinkedinOutlined />,\n        <DribbbleOutlined />,\n        <RedditSquareFilled />,\n        <WeiboCircleOutlined />,\n        <ChromeOutlined />,\n        <AlibabaOutlined />,\n        <IeOutlined />\n    ]\n\n    return BrandIcons[Math.floor(Math.random() * BrandIcons.length)];\n}","import { useState, useEffect } from 'react';\nimport { Space } from 'antd'\n\nimport CourseInfo from './CourseInfo';\nimport { courseCategories } from '../../../data/categoryData';\nimport { generateFakeCourses } from '../../../data/courseData';\n\nimport styled from 'styled-components'\n\nconst CourseInfoList = () => {\n    \n    const [currentCategory, setCategory] = useState(0);\n    const [courseCatalog, setCourseCatalog] = useState(generateFakeCourses());\n    \n    useEffect(() => {\n        setCourseCatalog(generateFakeCourses())\n    }, [currentCategory])\n\n    const showCourseCategories = () => {\n        return courseCategories.map((courseCategory, index) => <TabLink\n            isActive={index === currentCategory}\n            onClick={() => setCategory(index)}\n            key={index}\n            className=\"baloo weight-600 size-16\">\n                {courseCategory.title}\n        </TabLink>\n        );\n    }\n\n    const showCourseCatalog = () => {\n        return courseCatalog.map(({title, author, time, rating, icon}) => {\n          return  <CourseInfo icon={icon} title={title} author={author} time={time} rating={rating} />;\n        })\n    }\n    \n    return (\n        <>\n            <div className=\"flex row\" >\n            <Space size=\"large\"> \n                {showCourseCategories()}\n            </Space>\n            </div>\n\n            <div className=\"flex column\">\n                {showCourseCatalog()}\n            </div>\n        </>\n    )\n}\n\nconst TabLink = styled.span`\n    color: ${props => props.isActive ? '#000000' : '#BFBFBF'};\n    cursor: ${props => props.isActive ? 'default' : 'pointer'}\n`\n\nexport default CourseInfoList\n","import styled from \"styled-components\"\nimport { Line } from 'react-chartjs-2';\n\nconst LineChart = () => {\n\n    const data = {\n        labels: ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'],\n        datasets: [\n          {\n            label: '',\n            data: [0, 1.5, 2, 2.5, 1, 2.5, 1],\n            fill: false,\n            borderColor: \"#000000\",\n            backgroundColor: \"#000000\",\n            pointBackgroundColor: \"#000000\",\n            pointBorderColor: \"#000000\",\n          },\n        ],\n      };\n      \n      const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n                callbacks: {\n                    label: function(context) {\n                        \n                        const { dataset, dataIndex } = context;\n                        if (dataset.data) {\n                            return dataset.data[dataIndex];\n                        }\n                    },\n                    labelColor: function(context) {\n                        return false;\n                    }\n                }\n            }\n          },\n        scales: {\n            x: {\n                grid: {\n                  display: false\n                }\n            },\n            y: {\n                ticks: {\n                    // forces step size to be 50 units\n                    stepSize: 1\n                },\n                grid: {\n                    display: true\n                }\n            }\n        },\n        elements: {\n            line: {\n                tension: 0.5,\n                backgroundColor: \"#000000\"\n            }\n        }\n      };\n\n    return (\n        <ChartContainer className=\"flex row flex-wrap\">\n            <Line data={data} options={options} />\n        </ChartContainer>\n    )\n}\n\nconst ChartContainer = styled.div`\n    \n    @media only screen and (max-width: 400px) {\n        height: auto;\n        width: 80vw;\n    }\n`;\n\nexport default LineChart\n","import { Button } from 'antd';\n\nimport HomeWell from './components/HomeWell';\nimport UserInfoWell from './components/UserInfoWell';\nimport CurrentCourse from './components/CurrentCourse';\nimport CourseInfoList from './components/CourseInfoList';\nimport LineChart from './components/LineChart';\n\nimport styled from \"styled-components\"\nimport { statisticCategories } from '../../data/categoryData';\nimport { useState } from 'react';\nimport { Space } from 'antd';\nimport { BookOutlined } from '@ant-design/icons';\n\n\nconst Home = () => {\n\n    const [statCategoryIndex, setStatCategoryIndex] = useState(0);\n\n    const showStatCategories = () => {\n        return statisticCategories.map((statCategory, index) => <TabLink\n            isActive={index === statCategoryIndex}\n            onClick={() => setStatCategoryIndex(index)}\n            key={index}\n            className=\"baloo weight-600 size-16\">\n                {statCategory.title}\n        </TabLink>\n        );\n    }\n\n    return (\n        <section className=\"main full-width\">\n\n            <div className=\"row space-around flex-wrap hideable\">\n                \n                <HomeWell/>\n\n                <UserInfoWell/>\n\n            </div>\n\n            <div className=\"row space-around flex-wrap\" style={{height: \"100%\", marginTop: \"20px\"}}>\n                \n                <div className=\"flex column\" style={{flex: \"0.5\"}}>\n\n                    <CurrentCourse></CurrentCourse>\n\n                    <StyledHeader className=\"baloo weight-600 size-24\">Courses</StyledHeader>\n\n                    <CourseInfoList></CourseInfoList>\n\n                </div>\n\n                <div className=\"flex column\" style={{height: \"100%\", flex: \"0.4\", maxWidth: \"525px\"}}>\n\n                    <StyledHeader className=\"baloo weight-600 size-24\">Your statistics</StyledHeader>\n                    \n                    <div className=\"flex row flex-wrap\">\n                        <Space size=\"large\">\n                            {showStatCategories()}\n                        </Space>\n                    </div>\n\n                    <LineChart />\n\n                    <SubscriptionBanner>\n                        <div style={{flex: 1}} class=\"column space-between\">\n                            <span className=\"baloo size-24 weight-600\">Learn even more!</span>\n                            <span className=\"roboto size-16 weight-600\">Unlock premium features only for $9.99 per month.</span>\n                            <StyledButton>Go Premium</StyledButton>\n                        </div>\n\n                        <SubscriptionIconColumn class=\"column\">\n                           <StyledBookOutlined />\n                        </SubscriptionIconColumn>\n                        \n                    </SubscriptionBanner>              \n                    \n                </div>\n\n            </div>\n\n        </section>\n    )\n}\n\nexport default Home\n\nconst StyledBookOutlined = styled(BookOutlined)`\n    font-size: 60px;\n`;\n\nconst SubscriptionIconColumn = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n    background-color: #000000;\n    color: #ffffff;\n    border-radius: 10px;\n`;\n\nconst SubscriptionBanner = styled.div`\n    display: flex;\n    width: 100%;\n    background-color: #F5F5F7;\n    margin-top: 50px;\n    padding: 20px 20px;\n\n    div {\n        min-height:200px;\n    }\n`;\n\nconst TabLink = styled.span`\n    color: ${props => props.isActive ? '#000000' : '#BFBFBF'};\n    cursor: ${props => props.isActive ? 'default' : 'pointer'}\n`\n\nconst StyledHeader = styled.span`\n    margin-top: 25px;\n    margin-bottom: 20px;\n    display: block;\n`\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './styles/App.css';\nimport './styles/common.css'\n\nimport Sidebar from './components/core/Sidebar';\nimport Home from './screens/Home'\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n        <Sidebar></Sidebar>\n      <Switch>\n        <Route path='/' component={Home} />\n      </Switch>\n      \n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}